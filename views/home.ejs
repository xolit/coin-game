<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/styleHome.css">
    <link rel="shortcut icon" href="/logo.png" type="image/x-icon">
    <title>Gold Master</title>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg bg-body-dark custom-navbar">
      <div class="container-fluid nav-gap">
        <li class="pointer navbar-brand">
          Coin: <span id="coinElement"><%= myAcc.coin %> </span>
        </li>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNav"
          aria-controls="navbarNav"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            <% if(!myAcc){ %>
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/login"
                >Login</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/Signup">Signup</a>
            </li>
            <% } else { %>
            <li class="nav-item">
              <a class="nav-link" href="/logout">Logout</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="#"><%= myAcc.name %></a>
            </li>
            <% } %>
          </ul>
        </div>
      </div>
    </nav>

    <section class="hero">
      <form id="coinForm">
        <button type="submit" id="gainCoins">+1</button>
      </form>
    </section>

    <section class="leaderboard">
      <table>
        <thead>
          <tr>
            <th class="pointer">Name</th>
            <th class="pointer">Coins</th>
          </tr>
        </thead>
        <tbody id="leaderboardBody">
          <tr>
            <% if(myAcc){ %>
            <td class="pointer" style="background-color: rgb(70, 69, 69)">
              Me
            </td>
            <td class="pointer" style="background-color: rgb(70, 69, 69)">
              <%= myAcc.coin %>
            </td>
            <% }else{ %>
            <td class="pointer">User</td>
            <td class="pointer">0</td>
            <% } %>
          </tr>

          <% allUsers.forEach(user => { %>
          <tr>
            <td class="pointer"><%= user.name %></td>
            <td class="pointer"><%= user.coin %></td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </section>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>

    <script>
      async function getReqToGetDataFromBackend() {
        try {
          const response = await fetch("/", {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
            },
          });

          if (!response.ok) {
            throw new Error(
              "Network response was not ok " + response.statusText
            );
          }

          const data = await response.json();
          const { allUsers, myAcc } = data;
          document.getElementById("coinElement").innerText = myAcc.coin;

          const leaderboardBody = document.getElementById("leaderboardBody");
          leaderboardBody.innerHTML = "";
          allUsers.forEach((user) => {
            const row = document.createElement("tr");
            row.innerHTML = `<td>${user.name}</td><td>${user.coin}</td>`;
            leaderboardBody.appendChild(row);
          });
        } catch (error) {
          console.error("There was a problem with the fetch operation:", error);
        }
      }

      // Call the function to fetch data when the page loads
      document.addEventListener("DOMContentLoaded", getReqToGetDataFromBackend);

      // POST request to update coins
      document
        .getElementById("coinForm")
        .addEventListener("submit", async (e) => {
          e.preventDefault();
          try {
            const response = await fetch("/", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
            });

            if (!response.ok) {
              throw new Error(
                "Network response was not ok " + response.statusText
              );
            }

            const updatedUser = await response.json();
            document.getElementById("coinElement").innerText = updatedUser.coin;
          } catch (error) {
            console.error(
              "There was a problem with the fetch operation:",
              error
            );
          }
        });
    </script>
  </body>
</html>
